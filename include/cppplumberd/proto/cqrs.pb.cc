// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cqrs.proto
// Protobuf C++ Version: 5.29.5

#include "cqrs.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cppplumberd {

inline constexpr EventHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : timestamp_{::uint64_t{0u}},
        event_type_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventHeader::EventHeader(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventHeaderDefaultTypeInternal() {}
  union {
    EventHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventHeaderDefaultTypeInternal _EventHeader_default_instance_;

inline constexpr CreateStream::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateStream::CreateStream(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateStreamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateStreamDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateStreamDefaultTypeInternal() {}
  union {
    CreateStream _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateStreamDefaultTypeInternal _CreateStream_default_instance_;

inline constexpr CommandResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_code_{0u},
        response_type_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CommandResponse::CommandResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommandResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommandResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommandResponseDefaultTypeInternal() {}
  union {
    CommandResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommandResponseDefaultTypeInternal _CommandResponse_default_instance_;

inline constexpr CommandHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : recipient_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        command_type_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CommandHeader::CommandHeader(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommandHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommandHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommandHeaderDefaultTypeInternal() {}
  union {
    CommandHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommandHeaderDefaultTypeInternal _CommandHeader_default_instance_;
}  // namespace cppplumberd
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cqrs_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cqrs_2eproto = nullptr;
const ::uint32_t
    TableStruct_cqrs_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cppplumberd::CommandHeader, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cppplumberd::CommandHeader, _impl_.command_type_),
        PROTOBUF_FIELD_OFFSET(::cppplumberd::CommandHeader, _impl_.recipient_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cppplumberd::CommandResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cppplumberd::CommandResponse, _impl_.status_code_),
        PROTOBUF_FIELD_OFFSET(::cppplumberd::CommandResponse, _impl_.error_message_),
        PROTOBUF_FIELD_OFFSET(::cppplumberd::CommandResponse, _impl_.response_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cppplumberd::CreateStream, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cppplumberd::CreateStream, _impl_.name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cppplumberd::EventHeader, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cppplumberd::EventHeader, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::cppplumberd::EventHeader, _impl_.event_type_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cppplumberd::CommandHeader)},
        {10, -1, -1, sizeof(::cppplumberd::CommandResponse)},
        {21, -1, -1, sizeof(::cppplumberd::CreateStream)},
        {30, -1, -1, sizeof(::cppplumberd::EventHeader)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cppplumberd::_CommandHeader_default_instance_._instance,
    &::cppplumberd::_CommandResponse_default_instance_._instance,
    &::cppplumberd::_CreateStream_default_instance_._instance,
    &::cppplumberd::_EventHeader_default_instance_._instance,
};
const char descriptor_table_protodef_cqrs_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\ncqrs.proto\022\013cppplumberd\"8\n\rCommandHead"
    "er\022\024\n\014command_type\030\001 \001(\r\022\021\n\trecipient\030\002 "
    "\001(\t\"T\n\017CommandResponse\022\023\n\013status_code\030\001 "
    "\001(\r\022\025\n\rerror_message\030\002 \001(\t\022\025\n\rresponse_t"
    "ype\030\003 \001(\r\"\034\n\014CreateStream\022\014\n\004name\030\001 \001(\t\""
    "4\n\013EventHeader\022\021\n\ttimestamp\030\001 \001(\004\022\022\n\neve"
    "nt_type\030\002 \001(\rb\006proto3"
};
static ::absl::once_flag descriptor_table_cqrs_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cqrs_2eproto = {
    false,
    false,
    261,
    descriptor_table_protodef_cqrs_2eproto,
    "cqrs.proto",
    &descriptor_table_cqrs_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_cqrs_2eproto::offsets,
    file_level_enum_descriptors_cqrs_2eproto,
    file_level_service_descriptors_cqrs_2eproto,
};
namespace cppplumberd {
// ===================================================================

class CommandHeader::_Internal {
 public:
};

CommandHeader::CommandHeader(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cppplumberd.CommandHeader)
}
inline PROTOBUF_NDEBUG_INLINE CommandHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cppplumberd::CommandHeader& from_msg)
      : recipient_(arena, from.recipient_),
        _cached_size_{0} {}

CommandHeader::CommandHeader(
    ::google::protobuf::Arena* arena,
    const CommandHeader& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CommandHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.command_type_ = from._impl_.command_type_;

  // @@protoc_insertion_point(copy_constructor:cppplumberd.CommandHeader)
}
inline PROTOBUF_NDEBUG_INLINE CommandHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : recipient_(arena),
        _cached_size_{0} {}

inline void CommandHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.command_type_ = {};
}
CommandHeader::~CommandHeader() {
  // @@protoc_insertion_point(destructor:cppplumberd.CommandHeader)
  SharedDtor(*this);
}
inline void CommandHeader::SharedDtor(MessageLite& self) {
  CommandHeader& this_ = static_cast<CommandHeader&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.recipient_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CommandHeader::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CommandHeader(arena);
}
constexpr auto CommandHeader::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CommandHeader),
                                            alignof(CommandHeader));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CommandHeader::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CommandHeader_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CommandHeader::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CommandHeader>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CommandHeader::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CommandHeader>(), &CommandHeader::ByteSizeLong,
            &CommandHeader::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CommandHeader, _impl_._cached_size_),
        false,
    },
    &CommandHeader::kDescriptorMethods,
    &descriptor_table_cqrs_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CommandHeader::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> CommandHeader::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cppplumberd::CommandHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string recipient = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CommandHeader, _impl_.recipient_)}},
    // uint32 command_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommandHeader, _impl_.command_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CommandHeader, _impl_.command_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 command_type = 1;
    {PROTOBUF_FIELD_OFFSET(CommandHeader, _impl_.command_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string recipient = 2;
    {PROTOBUF_FIELD_OFFSET(CommandHeader, _impl_.recipient_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\0\11\0\0\0\0\0"
    "cppplumberd.CommandHeader"
    "recipient"
  }},
};

PROTOBUF_NOINLINE void CommandHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:cppplumberd.CommandHeader)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.recipient_.ClearToEmpty();
  _impl_.command_type_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CommandHeader::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CommandHeader& this_ = static_cast<const CommandHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CommandHeader::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CommandHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cppplumberd.CommandHeader)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 command_type = 1;
          if (this_._internal_command_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_command_type(), target);
          }

          // string recipient = 2;
          if (!this_._internal_recipient().empty()) {
            const std::string& _s = this_._internal_recipient();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cppplumberd.CommandHeader.recipient");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cppplumberd.CommandHeader)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CommandHeader::ByteSizeLong(const MessageLite& base) {
          const CommandHeader& this_ = static_cast<const CommandHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CommandHeader::ByteSizeLong() const {
          const CommandHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cppplumberd.CommandHeader)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string recipient = 2;
            if (!this_._internal_recipient().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recipient());
            }
            // uint32 command_type = 1;
            if (this_._internal_command_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_command_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CommandHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommandHeader*>(&to_msg);
  auto& from = static_cast<const CommandHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cppplumberd.CommandHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_recipient().empty()) {
    _this->_internal_set_recipient(from._internal_recipient());
  }
  if (from._internal_command_type() != 0) {
    _this->_impl_.command_type_ = from._impl_.command_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommandHeader::CopyFrom(const CommandHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cppplumberd.CommandHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommandHeader::InternalSwap(CommandHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_, &other->_impl_.recipient_, arena);
        swap(_impl_.command_type_, other->_impl_.command_type_);
}

::google::protobuf::Metadata CommandHeader::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommandResponse::_Internal {
 public:
};

CommandResponse::CommandResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cppplumberd.CommandResponse)
}
inline PROTOBUF_NDEBUG_INLINE CommandResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cppplumberd::CommandResponse& from_msg)
      : error_message_(arena, from.error_message_),
        _cached_size_{0} {}

CommandResponse::CommandResponse(
    ::google::protobuf::Arena* arena,
    const CommandResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CommandResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_code_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_code_),
           offsetof(Impl_, response_type_) -
               offsetof(Impl_, status_code_) +
               sizeof(Impl_::response_type_));

  // @@protoc_insertion_point(copy_constructor:cppplumberd.CommandResponse)
}
inline PROTOBUF_NDEBUG_INLINE CommandResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_message_(arena),
        _cached_size_{0} {}

inline void CommandResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_code_),
           0,
           offsetof(Impl_, response_type_) -
               offsetof(Impl_, status_code_) +
               sizeof(Impl_::response_type_));
}
CommandResponse::~CommandResponse() {
  // @@protoc_insertion_point(destructor:cppplumberd.CommandResponse)
  SharedDtor(*this);
}
inline void CommandResponse::SharedDtor(MessageLite& self) {
  CommandResponse& this_ = static_cast<CommandResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CommandResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CommandResponse(arena);
}
constexpr auto CommandResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CommandResponse),
                                            alignof(CommandResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CommandResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CommandResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CommandResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CommandResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CommandResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CommandResponse>(), &CommandResponse::ByteSizeLong,
            &CommandResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_._cached_size_),
        false,
    },
    &CommandResponse::kDescriptorMethods,
    &descriptor_table_cqrs_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CommandResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 49, 2> CommandResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cppplumberd::CommandResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 status_code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommandResponse, _impl_.status_code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.status_code_)}},
    // string error_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.error_message_)}},
    // uint32 response_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommandResponse, _impl_.response_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.response_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 status_code = 1;
    {PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.status_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string error_message = 2;
    {PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 response_type = 3;
    {PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.response_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\33\0\15\0\0\0\0\0"
    "cppplumberd.CommandResponse"
    "error_message"
  }},
};

PROTOBUF_NOINLINE void CommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cppplumberd.CommandResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  ::memset(&_impl_.status_code_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.response_type_) -
      reinterpret_cast<char*>(&_impl_.status_code_)) + sizeof(_impl_.response_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CommandResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CommandResponse& this_ = static_cast<const CommandResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CommandResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CommandResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cppplumberd.CommandResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 status_code = 1;
          if (this_._internal_status_code() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_status_code(), target);
          }

          // string error_message = 2;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cppplumberd.CommandResponse.error_message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint32 response_type = 3;
          if (this_._internal_response_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_response_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cppplumberd.CommandResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CommandResponse::ByteSizeLong(const MessageLite& base) {
          const CommandResponse& this_ = static_cast<const CommandResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CommandResponse::ByteSizeLong() const {
          const CommandResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cppplumberd.CommandResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string error_message = 2;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // uint32 status_code = 1;
            if (this_._internal_status_code() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_status_code());
            }
            // uint32 response_type = 3;
            if (this_._internal_response_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_response_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CommandResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommandResponse*>(&to_msg);
  auto& from = static_cast<const CommandResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cppplumberd.CommandResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_status_code() != 0) {
    _this->_impl_.status_code_ = from._impl_.status_code_;
  }
  if (from._internal_response_type() != 0) {
    _this->_impl_.response_type_ = from._impl_.response_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommandResponse::CopyFrom(const CommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cppplumberd.CommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommandResponse::InternalSwap(CommandResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.response_type_)
      + sizeof(CommandResponse::_impl_.response_type_)
      - PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.status_code_)>(
          reinterpret_cast<char*>(&_impl_.status_code_),
          reinterpret_cast<char*>(&other->_impl_.status_code_));
}

::google::protobuf::Metadata CommandResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateStream::_Internal {
 public:
};

CreateStream::CreateStream(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cppplumberd.CreateStream)
}
inline PROTOBUF_NDEBUG_INLINE CreateStream::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cppplumberd::CreateStream& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

CreateStream::CreateStream(
    ::google::protobuf::Arena* arena,
    const CreateStream& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateStream* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cppplumberd.CreateStream)
}
inline PROTOBUF_NDEBUG_INLINE CreateStream::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void CreateStream::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CreateStream::~CreateStream() {
  // @@protoc_insertion_point(destructor:cppplumberd.CreateStream)
  SharedDtor(*this);
}
inline void CreateStream::SharedDtor(MessageLite& self) {
  CreateStream& this_ = static_cast<CreateStream&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CreateStream::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateStream(arena);
}
constexpr auto CreateStream::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CreateStream),
                                            alignof(CreateStream));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateStream::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateStream_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateStream::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateStream>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateStream::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateStream>(), &CreateStream::ByteSizeLong,
            &CreateStream::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateStream, _impl_._cached_size_),
        false,
    },
    &CreateStream::kDescriptorMethods,
    &descriptor_table_cqrs_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateStream::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 37, 2> CreateStream::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cppplumberd::CreateStream>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateStream, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(CreateStream, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\4\0\0\0\0\0\0"
    "cppplumberd.CreateStream"
    "name"
  }},
};

PROTOBUF_NOINLINE void CreateStream::Clear() {
// @@protoc_insertion_point(message_clear_start:cppplumberd.CreateStream)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateStream::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateStream& this_ = static_cast<const CreateStream&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateStream::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateStream& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cppplumberd.CreateStream)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cppplumberd.CreateStream.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cppplumberd.CreateStream)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateStream::ByteSizeLong(const MessageLite& base) {
          const CreateStream& this_ = static_cast<const CreateStream&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateStream::ByteSizeLong() const {
          const CreateStream& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cppplumberd.CreateStream)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateStream::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateStream*>(&to_msg);
  auto& from = static_cast<const CreateStream&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cppplumberd.CreateStream)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateStream::CopyFrom(const CreateStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cppplumberd.CreateStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateStream::InternalSwap(CreateStream* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata CreateStream::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventHeader::_Internal {
 public:
};

EventHeader::EventHeader(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cppplumberd.EventHeader)
}
EventHeader::EventHeader(
    ::google::protobuf::Arena* arena, const EventHeader& from)
    : EventHeader(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EventHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EventHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, event_type_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::event_type_));
}
EventHeader::~EventHeader() {
  // @@protoc_insertion_point(destructor:cppplumberd.EventHeader)
  SharedDtor(*this);
}
inline void EventHeader::SharedDtor(MessageLite& self) {
  EventHeader& this_ = static_cast<EventHeader&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EventHeader::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventHeader(arena);
}
constexpr auto EventHeader::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EventHeader),
                                            alignof(EventHeader));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventHeader::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventHeader_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventHeader::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventHeader>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventHeader::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventHeader>(), &EventHeader::ByteSizeLong,
            &EventHeader::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventHeader, _impl_._cached_size_),
        false,
    },
    &EventHeader::kDescriptorMethods,
    &descriptor_table_cqrs_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventHeader::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> EventHeader::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cppplumberd::EventHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 event_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EventHeader, _impl_.event_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EventHeader, _impl_.event_type_)}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventHeader, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EventHeader, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(EventHeader, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 event_type = 2;
    {PROTOBUF_FIELD_OFFSET(EventHeader, _impl_.event_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EventHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:cppplumberd.EventHeader)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.event_type_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.event_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventHeader::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventHeader& this_ = static_cast<const EventHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventHeader::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cppplumberd.EventHeader)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // uint32 event_type = 2;
          if (this_._internal_event_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_event_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cppplumberd.EventHeader)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventHeader::ByteSizeLong(const MessageLite& base) {
          const EventHeader& this_ = static_cast<const EventHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventHeader::ByteSizeLong() const {
          const EventHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cppplumberd.EventHeader)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // uint32 event_type = 2;
            if (this_._internal_event_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_event_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventHeader*>(&to_msg);
  auto& from = static_cast<const EventHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cppplumberd.EventHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_event_type() != 0) {
    _this->_impl_.event_type_ = from._impl_.event_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventHeader::CopyFrom(const EventHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cppplumberd.EventHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventHeader::InternalSwap(EventHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventHeader, _impl_.event_type_)
      + sizeof(EventHeader::_impl_.event_type_)
      - PROTOBUF_FIELD_OFFSET(EventHeader, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata EventHeader::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace cppplumberd
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cqrs_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
